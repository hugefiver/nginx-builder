.PHONY: dep get-nginx get-ssl build-ssl get-zlib get-brotli get-pcre set-pcre build install clean

PROCS ?= 1
compile_process := $(PROCS)

group = nginx
user = nginx

base_pass = $(PWD)
lib_path = lib

nginx = nginx
nginx_path = $(lib_path)/$(nginx)
nginx_url = http://nginx.org/download/nginx-1.20.1.tar.gz
nginx_file = lib/nginx.tar.gz

zlib = zlib-1.2.11
zlib_url = http://zlib.net/zlib-1.2.11.tar.gz
zlib_file = lib/zlib.tar.gz

pcre = pcre-8.45
pcre_url = https://ftp.pcre.org/pub/pcre/pcre-8.45.tar.gz
pcre_file = lib/pcre-8.45.tar.gz

brotli = brotli
brotli_url = https://github.com/google/ngx_brotli.git
brotli_lib = lib/brotli

aio = libaio
aio_url = https://pagure.io/libaio/archive/libaio-0.3.112/libaio-libaio-0.3.112.tar.gz
aio_file = lib/libaio.tar.gz

boringssl = boringssl
ssl_lib = $(boringssl)/.openssl/lib
ssl_include = $(boringssl)/.openssl/include/openssl

.DEFAULT_GOAL := build

clean:
	cd $(lib_path); \
	rm -rf $(nginx_file) $(nginx) $(boringssl) $(zlib) $(pcre)

dep: get-nginx get-ssl get-zlib get-pcre get-brotli

get-nginx:
	git clone --depth 1 https://github.com/VKCOM/nginx-quic.git $(nginx_path)

get-ssl:
	git clone --depth 1 https://github.com/google/boringssl.git $(lib_path)/$(boringssl)

get-zlib:
	curl $(zlib_url) -o $(zlib_file)
	tar zxf $(zlib_file) -C lib
	rm $(zlib_file)

get-pcre:
	curl $(pcre_url) -o $(pcre_file)
	tar zxf $(pcre_file) -C lib
	rm $(pcre_file)

# get-aio:
# 	curl $(aio_url) -o $(aio_file)
# 	mkdir ./lib/$(aio)
# 	tar zxvf $(aio_file) -C ./lib/$(aio)

build-ssl:
	cd $(lib_path)/$(boringssl) && \
		mkdir -p build .openssl/lib
	cd $(lib_path)/$(boringssl) && \
		ln -sf `pwd`/include .openssl/include \
		# && touch .openssl/include/openssl/ssl.h
	cd $(lib_path)/$(boringssl) && cmake -S ./ -B build/ -DCMAKE_BUILD_TYPE=Release
	cd $(lib_path)/$(boringssl) && make -C build/ -j $(compile_process)
	cd $(lib_path)/$(boringssl) && \
		cp build/crypto/libcrypto.a build/ssl/libssl.a .openssl/lib

set-pcre:
	cd $(lib_path)/$(pcre) && \
	./configure --enable-jit 

get-brotli:
	git clone --depth 1 $(brotli_url) $(brotli_lib)

build: set-pcre build-ssl
	cd $(nginx_path) && \
	./auto/configure \
		--prefix=/opt/nginx \
		--sbin-path=/usr/sbin/nginx \
		--user=nginx --group=nginx \
		--modules-path=/usr/lib64/nginx/modules \
		--conf-path=/etc/nginx/nginx.conf \
		--error-log-path=/var/log/nginx/error.log \
		--http-log-path=/var/log/nginx/access.log \
		--with-cc-opt='-Wno-error -O2' \
		--with-file-aio \
		--with-stream \
		--with-stream_ssl_module \
		--with-stream_ssl_preread_module \
		--with-http_auth_request_module \
		--with-http_ssl_module \
		--with-http_v2_module \
		--with-http_realip_module \
		--with-http_addition_module \
		--with-http_v3_module \
		--with-http_quic_module \
		--with-stream_quic_module \
		--with-pcre=../$(pcre) --with-pcre-jit \
		--with-zlib=../$(zlib) \
		--with-openssl=../$(boringssl)\
		--add-module=../$(brotli_lib)
	touch $(lib_path)/$(boringssl)/include/openssl/ssl.h
	cd $(nginx_path) && \
		make -j $(compile_process)

install: build
	$(MAKE) -C $(nginx_path) install
